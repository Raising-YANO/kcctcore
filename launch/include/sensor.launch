<launch>
	<arg name="sim" default="false" />
	<arg name="tf_publish" default="true" />



	<group if="$(arg sim)">
		<node pkg="ira_laser_tools" name="laserscan_multi_merger" type="laserscan_multi_merger" output="screen" respawn="true">
			<param name="destination_frame" value="camera_link"/>
			<param name="cloud_destination_topic" value="/merged_cloud"/>
			<param name="scan_destination_topic" value="/scan"/>
			<param name="laserscan_topics" value ="/scan1 /scan2"/>
			<param name="angle_min" value="-3.14"/>
			<param name="angle_max" value="3.14"/>
		</node>
	</group>



    <group unless="$(arg sim)">
        <!--<node pkg="tf" type="static_transform_publisher" name="imu_transform" args="0 0 0 -1.570796 0 3.14159265 base_link imu_link 100"/>-->
		<node pkg="tf" type="static_transform_publisher" name="imu_transform" args="0 0 0 0 0 0 base_link imu_link 100"/>
		<node name="serial_node"        pkg="rosserial_python"      type="serial_node.py">
			<param name="port"              type="string"               value="/dev/teensy"/>
			<param name="baud"              type="int"                  value="57600"/>
			</node>
			
			<include file="$(find kcctcore)/launch/sensor/hokuyo/hokuyo_urg_single.launch"/>
			<include file="$(find kcctcore)/launch/sensor/velodyne/velodyne.launch"/>
			<node pkg="kcctcore" type="robot_model_node" name="robot_model_node" output="screen"/>
			<node name="teensy_handler" pkg="kcctcore" type="teensy_handler">
				<param name="tf_publish" value="$(arg tf_publish)" />
			</node>
		<!--<include file="$(find kcctcore)/launch/sensor/ublox/gnss.launch"/>-->
    </group>

</launch>
